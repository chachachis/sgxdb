// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave {
    from "openenclave/edl/syscall.edl" import *;
    from "platform.edl" import *;

    include "../shared.h"

    trusted {
        public int initialize_encryptor( bool encrypt, 
                                        [in, count=password_len] const char* password, 
                                        size_t password_len, 
                                        [in, out] encryption_header_t *header); 
        
        public int encrypt_block(bool encrypt, 
                                        [in, count=size] unsigned char* input_buf, 
                                        [out, count=size] unsigned char* output_buf, 
                                        size_t size);

        public void close_encryptor();

        public size_t ecall_checkvalidseq([in, count=seqlen] unsigned char* seq, size_t seqlen);
        public void ecall_addIDtomodel(int major, int minor);
        public model_id_t ecall_getdbmodelid(size_t index);
        public void ecall_loadparams(deepbind_model_t model);
        public void ecall_initmodel();
        public float ecall_scanmodel(size_t modelindex, 
						[in, count=seqlen] unsigned char* seq, 
						size_t seqlen,
						size_t window_size,
						int average_flag);
        
        
         public int ecall_decryptpredict([in, count=size] unsigned char* inbuff,
                                         size_t size,
                                         bool eof,
                                         size_t paddingsize);

    };

    untrusted {
        void hcall_printscores([in, out, count=modelcount] float* scores,
                                size_t modelcount);
    };
};


